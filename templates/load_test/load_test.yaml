AWSTemplateFormatVersion: "2010-09-09"
Description: "Load Test Environment"

Parameters:
  VPC:
    Type: String
    Description: The ID of VPC
  PublicSubnet1:
    Type: String
    Description: PublicSubnet1
  PublicSubnet2:
    Type: String
    Description: PublicSubnet2
  PrivateSubnet1:
    Type: String
    Description: PrivateSubnet1
  PrivateSubnet2:
    Type: String
    Description: PrivateSubnet2

Resources:
  ECR:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: locust

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: Locust
      CapacityProviders:
        - FARGATE
        - FARGATE_SPOT

  ECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  MasterTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ExecutionRoleArn: !GetAtt ECSTaskRole.Arn
      NetworkMode: awsvpc
      RuntimePlatform:
        CpuArchitecture: String
        OperatingSystemFamily: LINUX
      Family: locust-master
      RequiresCompatibilities:
        - FARGATE
      Memory: 512
      CPU: 256
      ContainerDefinitions:
        -
          Name: locust-master
          Image: !Sub ${AWS::AccountId}.dkr.ecr.ap-northeast-1.amazonaws.com/locust
          memoryReservation: 300
          LogConfiguration:
            LogDriver: awslogs
          PortMappings:
            - ContainerPort: 8089
              HostPort: 8089
            - ContainerPort: 5557
              HostPort: 5557
            - ContainerPort: 5558
              HostPort: 5558
          Command:
            - "-f"
            - "/mnt/locust/locustfile.py"
            - "--master"

  SlaveTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ExecutionRoleArn: !GetAtt ECSTaskRole.Arn
      NetworkMode: awsvpc
      RuntimePlatform:
        CpuArchitecture: String
        OperatingSystemFamily: LINUX
      Family: locust-slave
      RequiresCompatibilities:
        - FARGATE
      Memory: 512
      CPU: 256
      ContainerDefinitions:
        -
          Name: locust-slave
          Image: !Sub ${AWS::AccountId}.dkr.ecr.ap-northeast-1.amazonaws.com/locust
          memoryReservation: 300
          LogConfiguration:
            LogDriver: awslogs
          Command:
            - "-f"
            - "/mnt/locust/locustfile.py"
            - "--worker"
            - "--master-host"
            - "locust-master.locust"

  MasterService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: locust-svc
      Cluster: !Ref ECSCluster
      LaunchType: FARGATE
      DesiredCount: 1
      DeploymentConfiguration:
        MaximumPercent: 0
        MinimumHealthyPercent: 100
      SchedulingStrategy: REPLICA
      TaskDefinition: !Ref MasterTaskDefinition
      LoadBalancers:
        - ContainerName: locust-master
          ContainerPort: 8089
          TargetGroupArn: !Ref TargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref SecurityGroup
          Subnets:
            - !Ref PrivateSubnet1
      ServiceRegistries:
        - RegistryArn: !GetAtt DiscoveryService.Arn
    DependsOn: TargetGroup

  SlaveService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: locust-slave-svc
      Cluster: !Ref ECSCluster
      CapacityProviderStrategy:
       -  Base: 5
          CapacityProvider: FARGATE_SPOT
          Weight: 1
      DesiredCount: 5
      SchedulingStrategy: REPLICA
      TaskDefinition: !Ref SlaveTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref SecurityGroup
          Subnets:
            - !Ref PrivateSubnet1
            - !Ref PrivateSubnet2

  PrivateNamespace:
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Properties:
        Name: locust
        Vpc: !Ref VPC

  DiscoveryService:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - TTL: 60
            Type: A
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: locust-master
      NamespaceId: !Ref PrivateNamespace

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: for load test

  SecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: -1
      SourceSecurityGroupId: !Ref SecurityGroup
    DependsOn: SecurityGroup

  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: 900
      Name: locust
      Scheme: internet-facing
      SecurityGroups:
        - !Ref SecurityGroup
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      Type: application

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: locust-master-svc
      TargetType: ip
      # Targets:
      # - Id: !GetAtt MasterService.Arn
      #   Port: 8089
      VpcId: !Ref VPC
      Protocol: HTTP
      Port: 80
    DependsOn: ALB

  HTTPlistener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
          - Type: forward
            TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP
    DependsOn: TargetGroup